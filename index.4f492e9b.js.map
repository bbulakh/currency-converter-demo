{"mappings":"AAAA,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAC/C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,iBAAiB,EAAE;AAEzB,yEAAyE;AACzE,MAAM,aAAa;IACjyCAAyC;AACzC,SAAS,gBAAgB,OAAO;IAC9B,OAAO,OAAO,OAAO,CAAC,SACnB,GAAG,CACF,CAAC,CAAC,cAAc,aAAa,GAC3B,CAAC,eAAe,EAAE,aAAa,EAAE,EAAE,aAAa,GAAG,EAAE,aAAa,SAAS,CAAC,EAE/E,IAAI,CAAC;AACV;AAEA,yCAAyC;AACzC,WAAW,SAAS,GAAG,gBAAgB;AACvC,SAAS,SAAS,GAAG,gBAAgB;AAErC,MACE,yFAEC,IAAI,CAAC,CAAC;IACL,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM;IAElB,OAAO,SAAS,IAAI;AACtB,GACC,IAAI,CAAC,CAAC;IACL,OAAO,aAAa,GAAG,KAAK,KAAK;IACjC,WAAW,KAAK,GAAG;IACnB,SAAS,KAAK,GAAG;AACnB,GACC,KAAK,CAAC,CAAC,MAAQ,MAAM;AAExB,oCAAoC;AACpC,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,SAAS;IAC9D,IAAI,YAAY,SAAS,aAAa,CAAC;IACvC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,IAAI,eAAe,UAAU,KAAK;IAClC,UAAU,KAAK,GAAG,QAAQ,KAAK;IAC/B,QAAQ,KAAK,GAAG;AAClB;AAEA,uCAAuC;AACvC,SAAS,cAAc,CAAC,iBAAiB,gBAAgB,CAAC,SAAS;IACjE,6DAA6D;IAC7D,MAAM,eAAe,WAAW,KAAK;IACrC,MAAM,aAAa,SAAS,KAAK;IACjC,MAAM,SAAS,SAAS,cAAc,CAAC,UAAU,KAAK;IAEtD,kCAAkC;IAClC,MAAM,kBACJ,AAAC,SAAS,OAAO,aAAa,CAAC,WAAW,GAC1C,OAAO,aAAa,CAAC,aAAa;IAEpC,+BAA+B;IAC/B,SAAS,aAAa,CAAC,aAAa,WAAW,GAC7C,aAAa,OAAO,gBAAgB,OAAO,CAAC;IAE9C,MAAM,oBAAoB;QACxB,cAAc;QACd,YAAY;QACZ,QAAQ;QACR,iBAAiB,gBAAgB,OAAO,CAAC;IAC3C;IAEA,eAAe,OAAO,CAAC;IACvB;AACF;AAEA,uBAAuB;AACvB,MAAM,iBAAiB;IACrB,aAAa,SAAS,CAAC,MAAM,CAAC;AAChC;AAEA,eAAe,gBAAgB,CAAC,SAAS,CAAC;IACxC,EAAE,eAAe;IACjB;AACF;AAEA,SAAS,eAAe,CAAC,gBAAgB,CAAC,SAAS;IACjD,IAAI,aAAa,SAAS,CAAC,QAAQ,CAAC,SAClC;AAEJ;AAEA,gDAAgD;AAChD,SAAS;IACP,aAAa,SAAS,GAAG;IAEzB,IAAI,eAAe,MAAM,GAAG,GAC1B,eAAe,KAAK;IAGtB,eAAe,OAAO,CAAC,CAAC;QACtB,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,SAAS,WAAW,GAAG,CAAC,EAAE,WAAW,MAAM,CAAC,CAAC,EAAE,WAAW,YAAY,CAAC,GAAG,EAAE,WAAW,eAAe,CAAC,CAAC,EAAE,WAAW,UAAU,CAAC,CAAC;QACjI,aAAa,WAAW,CAAC;IAC3B;AACF","sources":["src/assets/js/main.js"],"sourcesContent":["const fromSelect = document.getElementById(\"fromCurrency\");\nconst toSelect = document.getElementById(\"toCurrency\");\nconst dropdownButton = document.getElementById(\"dropdownButton\");\nconst dropdownMenu = document.querySelector(\".dropdown_content\");\nconst historyStorage = [];\n\n// Copy currencies names from /currencies endpoint of open exchange rates\nconst currencies = {\n  AED: \"United Arab Emirates Dirham\",\n  AFN: \"Afghan Afghani\",\n  ALL: \"Albanian Lek\",\n  AMD: \"Armenian Dram\",\n  ANG: \"Netherlands Antillean Guilder\",\n  AOA: \"Angolan Kwanza\",\n  ARS: \"Argentine Peso\",\n  AUD: \"Australian Dollar\",\n  AWG: \"Aruban Florin\",\n  AZN: \"Azerbaijani Manat\",\n  BAM: \"Bosnia-Herzegovina Convertible Mark\",\n  BBD: \"Barbadian Dollar\",\n  BDT: \"Bangladeshi Taka\",\n  BGN: \"Bulgarian Lev\",\n  BHD: \"Bahraini Dinar\",\n  BIF: \"Burundian Franc\",\n  BMD: \"Bermudan Dollar\",\n  BND: \"Brunei Dollar\",\n  BOB: \"Bolivian Boliviano\",\n  BRL: \"Brazilian Real\",\n  BSD: \"Bahamian Dollar\",\n  BTC: \"Bitcoin\",\n  BTN: \"Bhutanese Ngultrum\",\n  BWP: \"Botswanan Pula\",\n  BYN: \"Belarusian Ruble\",\n  BZD: \"Belize Dollar\",\n  CAD: \"Canadian Dollar\",\n  CDF: \"Congolese Franc\",\n  CHF: \"Swiss Franc\",\n  CLF: \"Chilean Unit of Account (UF)\",\n  CLP: \"Chilean Peso\",\n  CNH: \"Chinese Yuan (Offshore)\",\n  CNY: \"Chinese Yuan\",\n  COP: \"Colombian Peso\",\n  CRC: \"Costa Rican Colón\",\n  CUC: \"Cuban Convertible Peso\",\n  CUP: \"Cuban Peso\",\n  CVE: \"Cape Verdean Escudo\",\n  CZK: \"Czech Republic Koruna\",\n  DJF: \"Djiboutian Franc\",\n  DKK: \"Danish Krone\",\n  DOP: \"Dominican Peso\",\n  DZD: \"Algerian Dinar\",\n  EGP: \"Egyptian Pound\",\n  ERN: \"Eritrean Nakfa\",\n  ETB: \"Ethiopian Birr\",\n  EUR: \"Euro\",\n  FJD: \"Fijian Dollar\",\n  FKP: \"Falkland Islands Pound\",\n  GBP: \"British Pound Sterling\",\n  GEL: \"Georgian Lari\",\n  GGP: \"Guernsey Pound\",\n  GHS: \"Ghanaian Cedi\",\n  GIP: \"Gibraltar Pound\",\n  GMD: \"Gambian Dalasi\",\n  GNF: \"Guinean Franc\",\n  GTQ: \"Guatemalan Quetzal\",\n  GYD: \"Guyanaese Dollar\",\n  HKD: \"Hong Kong Dollar\",\n  HNL: \"Honduran Lempira\",\n  HRK: \"Croatian Kuna\",\n  HTG: \"Haitian Gourde\",\n  HUF: \"Hungarian Forint\",\n  IDR: \"Indonesian Rupiah\",\n  ILS: \"Israeli New Sheqel\",\n  IMP: \"Manx pound\",\n  INR: \"Indian Rupee\",\n  IQD: \"Iraqi Dinar\",\n  IRR: \"Iranian Rial\",\n  ISK: \"Icelandic Króna\",\n  JEP: \"Jersey Pound\",\n  JMD: \"Jamaican Dollar\",\n  JOD: \"Jordanian Dinar\",\n  JPY: \"Japanese Yen\",\n  KES: \"Kenyan Shilling\",\n  KGS: \"Kyrgystani Som\",\n  KHR: \"Cambodian Riel\",\n  KMF: \"Comorian Franc\",\n  KPW: \"North Korean Won\",\n  KRW: \"South Korean Won\",\n  KWD: \"Kuwaiti Dinar\",\n  KYD: \"Cayman Islands Dollar\",\n  KZT: \"Kazakhstani Tenge\",\n  LAK: \"Laotian Kip\",\n  LBP: \"Lebanese Pound\",\n  LKR: \"Sri Lankan Rupee\",\n  LRD: \"Liberian Dollar\",\n  LSL: \"Lesotho Loti\",\n  LYD: \"Libyan Dinar\",\n  MAD: \"Moroccan Dirham\",\n  MDL: \"Moldovan Leu\",\n  MGA: \"Malagasy Ariary\",\n  MKD: \"Macedonian Denar\",\n  MMK: \"Myanma Kyat\",\n  MNT: \"Mongolian Tugrik\",\n  MOP: \"Macanese Pataca\",\n  MRU: \"Mauritanian Ouguiya\",\n  MUR: \"Mauritian Rupee\",\n  MVR: \"Maldivian Rufiyaa\",\n  MWK: \"Malawian Kwacha\",\n  MXN: \"Mexican Peso\",\n  MYR: \"Malaysian Ringgit\",\n  MZN: \"Mozambican Metical\",\n  NAD: \"Namibian Dollar\",\n  NGN: \"Nigerian Naira\",\n  NIO: \"Nicaraguan Córdoba\",\n  NOK: \"Norwegian Krone\",\n  NPR: \"Nepalese Rupee\",\n  NZD: \"New Zealand Dollar\",\n  OMR: \"Omani Rial\",\n  PAB: \"Panamanian Balboa\",\n  PEN: \"Peruvian Nuevo Sol\",\n  PGK: \"Papua New Guinean Kina\",\n  PHP: \"Philippine Peso\",\n  PKR: \"Pakistani Rupee\",\n  PLN: \"Polish Zloty\",\n  PYG: \"Paraguayan Guarani\",\n  QAR: \"Qatari Rial\",\n  RON: \"Romanian Leu\",\n  RSD: \"Serbian Dinar\",\n  RUB: \"Russian Ruble\",\n  RWF: \"Rwandan Franc\",\n  SAR: \"Saudi Riyal\",\n  SBD: \"Solomon Islands Dollar\",\n  SCR: \"Seychellois Rupee\",\n  SDG: \"Sudanese Pound\",\n  SEK: \"Swedish Krona\",\n  SGD: \"Singapore Dollar\",\n  SHP: \"Saint Helena Pound\",\n  SLL: \"Sierra Leonean Leone\",\n  SOS: \"Somali Shilling\",\n  SRD: \"Surinamese Dollar\",\n  SSP: \"South Sudanese Pound\",\n  STD: \"São Tomé and Príncipe Dobra (pre-2018)\",\n  STN: \"São Tomé and Príncipe Dobra\",\n  SVC: \"Salvadoran Colón\",\n  SYP: \"Syrian Pound\",\n  SZL: \"Swazi Lilangeni\",\n  THB: \"Thai Baht\",\n  TJS: \"Tajikistani Somoni\",\n  TMT: \"Turkmenistani Manat\",\n  TND: \"Tunisian Dinar\",\n  TOP: \"Tongan Pa'anga\",\n  TRY: \"Turkish Lira\",\n  TTD: \"Trinidad and Tobago Dollar\",\n  TWD: \"New Taiwan Dollar\",\n  TZS: \"Tanzanian Shilling\",\n  UAH: \"Ukrainian Hryvnia\",\n  UGX: \"Ugandan Shilling\",\n  USD: \"United States Dollar\",\n  UYU: \"Uruguayan Peso\",\n  UZS: \"Uzbekistan Som\",\n  VEF: \"Venezuelan Bolívar Fuerte (Old)\",\n  VES: \"Venezuelan Bolívar Soberano\",\n  VND: \"Vietnamese Dong\",\n  VUV: \"Vanuatu Vatu\",\n  WST: \"Samoan Tala\",\n  XAF: \"CFA Franc BEAC\",\n  XAG: \"Silver Ounce\",\n  XAU: \"Gold Ounce\",\n  XCD: \"East Caribbean Dollar\",\n  XDR: \"Special Drawing Rights\",\n  XOF: \"CFA Franc BCEAO\",\n  XPD: \"Palladium Ounce\",\n  XPF: \"CFP Franc\",\n  XPT: \"Platinum Ounce\",\n  YER: \"Yemeni Rial\",\n  ZAR: \"South African Rand\",\n  ZMW: \"Zambian Kwacha\",\n  ZWL: \"Zimbabwean Dollar\",\n};\n\n// Generate options with currencies names\nfunction generateOptions(options) {\n  return Object.entries(options)\n    .map(\n      ([currencyCode, currencyName]) =>\n        `<option value=\"${currencyCode}\">${currencyCode} - ${currencyName}</option>`\n    )\n    .join(\"\");\n}\n\n// Add generated options to select inputs\nfromSelect.innerHTML = generateOptions(currencies);\ntoSelect.innerHTML = generateOptions(currencies);\n\nfetch(\n  \"https://openexchangerates.org/api/latest.json?app_id=fd990a81b594417cbff72b44d44316e6\"\n)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(\"Response Error\");\n    }\n    return response.json();\n  })\n  .then((data) => {\n    window.exchangeRates = data.rates;\n    fromSelect.value = \"USD\";\n    toSelect.value = \"RUB\";\n  })\n  .catch((err) => alert(err));\n\n// Add functionality for swap button\ndocument.getElementById(\"swapButton\").addEventListener(\"click\", () => {\n  let inputFrom = document.querySelector(\"#fromCurrency\");\n  let inputTo = document.querySelector(\"#toCurrency\");\n  let inputSwapped = inputFrom.value;\n  inputFrom.value = inputTo.value;\n  inputTo.value = inputSwapped;\n});\n\n// Add functionality for convert button\ndocument.getElementById(\"convertButton\").addEventListener(\"click\", () => {\n  // Get the selected currencies and the amount to be converted\n  const fromCurrency = fromSelect.value;\n  const toCurrency = toSelect.value;\n  const amount = document.getElementById(\"amount\").value;\n\n  // Perform the currency conversion\n  const convertedAmount =\n    (amount * window.exchangeRates[toCurrency]) /\n    window.exchangeRates[fromCurrency];\n\n  // Display the converted amount\n  document.querySelector(\".output p\").textContent =\n    toCurrency + \": \" + convertedAmount.toFixed(2);\n\n  const conversionDetails = {\n    fromCurrency: fromCurrency,\n    toCurrency: toCurrency,\n    amount: amount,\n    convertedAmount: convertedAmount.toFixed(2),\n  };\n\n  historyStorage.unshift(conversionDetails);\n  updateDropdownList();\n});\n\n// Toggle dropdown list\nconst toggleDropdown = () => {\n  dropdownMenu.classList.toggle(\"show\");\n};\n\ndropdownButton.addEventListener(\"click\", (e) => {\n  e.stopPropagation();\n  toggleDropdown();\n});\n\ndocument.documentElement.addEventListener(\"click\", function () {\n  if (dropdownMenu.classList.contains(\"show\")) {\n    toggleDropdown();\n  }\n});\n\n// Update dropdown list with conversions history\nfunction updateDropdownList() {\n  dropdownMenu.innerHTML = \"\";\n\n  if (historyStorage.length > 8) {\n    historyStorage.shift()\n  }\n\n  historyStorage.forEach((conversion) => {\n    const listItem = document.createElement(\"li\");\n    listItem.textContent = `${conversion.amount} ${conversion.fromCurrency} = ${conversion.convertedAmount} ${conversion.toCurrency}`;\n    dropdownMenu.appendChild(listItem);\n  });\n}\n"],"names":[],"version":3,"file":"index.4f492e9b.js.map","sourceRoot":"/__parcel_source_root/"}